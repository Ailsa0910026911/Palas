//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("MaterialModel", "FK_ArticleAnalyze", "LanguageMaterial", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleCrawler.ClientSrv.LanguageMaterial), "ArticleAnalyze", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleCrawler.ClientSrv.ArticleAnalyze), true)]
[assembly: EdmRelationshipAttribute("MaterialModel", "FK_ArticleAnalyze_UserID", "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleCrawler.ClientSrv.UserInfo), "ArticleAnalyze", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleCrawler.ClientSrv.ArticleAnalyze), true)]
[assembly: EdmRelationshipAttribute("MaterialModel", "FK_UserTask_ArticleID", "LanguageMaterial", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleCrawler.ClientSrv.LanguageMaterial), "UserTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleCrawler.ClientSrv.UserTask), true)]
[assembly: EdmRelationshipAttribute("MaterialModel", "FK_stat_fileid", "UserFile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleCrawler.ClientSrv.UserFile), "Stat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleCrawler.ClientSrv.Stat), true)]
[assembly: EdmRelationshipAttribute("MaterialModel", "FK_UserInfo_UserID", "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleCrawler.ClientSrv.UserInfo), "UserFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleCrawler.ClientSrv.UserFile), true)]
[assembly: EdmRelationshipAttribute("MaterialModel", "FK_UserTask", "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SimpleCrawler.ClientSrv.UserInfo), "UserTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleCrawler.ClientSrv.UserTask), true)]
[assembly: EdmRelationshipAttribute("MaterialModel", "ArticleAnalyzeCategory", "ArticleAnalyze", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleCrawler.ClientSrv.ArticleAnalyze), "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SimpleCrawler.ClientSrv.Category))]

#endregion

namespace SimpleCrawler.ClientSrv
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class MaterialDB : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“MaterialDB”部分中的连接字符串初始化新 MaterialDB 对象。
        /// </summary>
        public MaterialDB() : base("name=MaterialDB", "MaterialDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MaterialDB 对象。
        /// </summary>
        public MaterialDB(string connectionString) : base(connectionString, "MaterialDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MaterialDB 对象。
        /// </summary>
        public MaterialDB(EntityConnection connection) : base(connection, "MaterialDB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ArticleAnalyze> ArticleAnalyze
        {
            get
            {
                if ((_ArticleAnalyze == null))
                {
                    _ArticleAnalyze = base.CreateObjectSet<ArticleAnalyze>("ArticleAnalyze");
                }
                return _ArticleAnalyze;
            }
        }
        private ObjectSet<ArticleAnalyze> _ArticleAnalyze;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Category> Category
        {
            get
            {
                if ((_Category == null))
                {
                    _Category = base.CreateObjectSet<Category>("Category");
                }
                return _Category;
            }
        }
        private ObjectSet<Category> _Category;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<LanguageMaterial> LanguageMaterial
        {
            get
            {
                if ((_LanguageMaterial == null))
                {
                    _LanguageMaterial = base.CreateObjectSet<LanguageMaterial>("LanguageMaterial");
                }
                return _LanguageMaterial;
            }
        }
        private ObjectSet<LanguageMaterial> _LanguageMaterial;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Stat> Stat
        {
            get
            {
                if ((_Stat == null))
                {
                    _Stat = base.CreateObjectSet<Stat>("Stat");
                }
                return _Stat;
            }
        }
        private ObjectSet<Stat> _Stat;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserFile> UserFile
        {
            get
            {
                if ((_UserFile == null))
                {
                    _UserFile = base.CreateObjectSet<UserFile>("UserFile");
                }
                return _UserFile;
            }
        }
        private ObjectSet<UserFile> _UserFile;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserInfo> UserInfo
        {
            get
            {
                if ((_UserInfo == null))
                {
                    _UserInfo = base.CreateObjectSet<UserInfo>("UserInfo");
                }
                return _UserInfo;
            }
        }
        private ObjectSet<UserInfo> _UserInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserTask> UserTask
        {
            get
            {
                if ((_UserTask == null))
                {
                    _UserTask = base.CreateObjectSet<UserTask>("UserTask");
                }
                return _UserTask;
            }
        }
        private ObjectSet<UserTask> _UserTask;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 ArticleAnalyze EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToArticleAnalyze(ArticleAnalyze articleAnalyze)
        {
            base.AddObject("ArticleAnalyze", articleAnalyze);
        }
    
        /// <summary>
        /// 用于向 Category EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCategory(Category category)
        {
            base.AddObject("Category", category);
        }
    
        /// <summary>
        /// 用于向 LanguageMaterial EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToLanguageMaterial(LanguageMaterial languageMaterial)
        {
            base.AddObject("LanguageMaterial", languageMaterial);
        }
    
        /// <summary>
        /// 用于向 Stat EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToStat(Stat stat)
        {
            base.AddObject("Stat", stat);
        }
    
        /// <summary>
        /// 用于向 UserFile EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserFile(UserFile userFile)
        {
            base.AddObject("UserFile", userFile);
        }
    
        /// <summary>
        /// 用于向 UserInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserInfo(UserInfo userInfo)
        {
            base.AddObject("UserInfo", userInfo);
        }
    
        /// <summary>
        /// 用于向 UserTask EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserTask(UserTask userTask)
        {
            base.AddObject("UserTask", userTask);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MaterialModel", Name="ArticleAnalyze")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ArticleAnalyze : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ArticleAnalyze 对象。
        /// </summary>
        /// <param name="articleAnalyzeID">ArticleAnalyzeID 属性的初始值。</param>
        /// <param name="articleID">ArticleID 属性的初始值。</param>
        /// <param name="emotionHappy">EmotionHappy 属性的初始值。</param>
        /// <param name="emotionAccept">EmotionAccept 属性的初始值。</param>
        /// <param name="emotionSurprise">EmotionSurprise 属性的初始值。</param>
        /// <param name="emotionFear">EmotionFear 属性的初始值。</param>
        /// <param name="emotionSad">EmotionSad 属性的初始值。</param>
        /// <param name="emotionHate">EmotionHate 属性的初始值。</param>
        /// <param name="emotionExpect">EmotionExpect 属性的初始值。</param>
        /// <param name="emotionAngry">EmotionAngry 属性的初始值。</param>
        /// <param name="sentiment">Sentiment 属性的初始值。</param>
        /// <param name="knowledgePositive">KnowledgePositive 属性的初始值。</param>
        /// <param name="knowledgeNegative">KnowledgeNegative 属性的初始值。</param>
        /// <param name="actionPositive">ActionPositive 属性的初始值。</param>
        /// <param name="actionNegative">ActionNegative 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="createTime">CreateTime 属性的初始值。</param>
        public static ArticleAnalyze CreateArticleAnalyze(global::System.String articleAnalyzeID, global::System.String articleID, global::System.Int32 emotionHappy, global::System.Int32 emotionAccept, global::System.Int32 emotionSurprise, global::System.Int32 emotionFear, global::System.Int32 emotionSad, global::System.Int32 emotionHate, global::System.Int32 emotionExpect, global::System.Int32 emotionAngry, global::System.Int32 sentiment, global::System.Int32 knowledgePositive, global::System.Int32 knowledgeNegative, global::System.Int32 actionPositive, global::System.Int32 actionNegative, global::System.String userID, global::System.DateTime createTime)
        {
            ArticleAnalyze articleAnalyze = new ArticleAnalyze();
            articleAnalyze.ArticleAnalyzeID = articleAnalyzeID;
            articleAnalyze.ArticleID = articleID;
            articleAnalyze.EmotionHappy = emotionHappy;
            articleAnalyze.EmotionAccept = emotionAccept;
            articleAnalyze.EmotionSurprise = emotionSurprise;
            articleAnalyze.EmotionFear = emotionFear;
            articleAnalyze.EmotionSad = emotionSad;
            articleAnalyze.EmotionHate = emotionHate;
            articleAnalyze.EmotionExpect = emotionExpect;
            articleAnalyze.EmotionAngry = emotionAngry;
            articleAnalyze.Sentiment = sentiment;
            articleAnalyze.KnowledgePositive = knowledgePositive;
            articleAnalyze.KnowledgeNegative = knowledgeNegative;
            articleAnalyze.ActionPositive = actionPositive;
            articleAnalyze.ActionNegative = actionNegative;
            articleAnalyze.UserID = userID;
            articleAnalyze.CreateTime = createTime;
            return articleAnalyze;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ArticleAnalyzeID
        {
            get
            {
                return _ArticleAnalyzeID;
            }
            set
            {
                if (_ArticleAnalyzeID != value)
                {
                    OnArticleAnalyzeIDChanging(value);
                    ReportPropertyChanging("ArticleAnalyzeID");
                    _ArticleAnalyzeID = StructuralObject.SetValidValue(value, false, "ArticleAnalyzeID");
                    ReportPropertyChanged("ArticleAnalyzeID");
                    OnArticleAnalyzeIDChanged();
                }
            }
        }
        private global::System.String _ArticleAnalyzeID;
        partial void OnArticleAnalyzeIDChanging(global::System.String value);
        partial void OnArticleAnalyzeIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ArticleID
        {
            get
            {
                return _ArticleID;
            }
            set
            {
                OnArticleIDChanging(value);
                ReportPropertyChanging("ArticleID");
                _ArticleID = StructuralObject.SetValidValue(value, false, "ArticleID");
                ReportPropertyChanged("ArticleID");
                OnArticleIDChanged();
            }
        }
        private global::System.String _ArticleID;
        partial void OnArticleIDChanging(global::System.String value);
        partial void OnArticleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmotionHappy
        {
            get
            {
                return _EmotionHappy;
            }
            set
            {
                OnEmotionHappyChanging(value);
                ReportPropertyChanging("EmotionHappy");
                _EmotionHappy = StructuralObject.SetValidValue(value, "EmotionHappy");
                ReportPropertyChanged("EmotionHappy");
                OnEmotionHappyChanged();
            }
        }
        private global::System.Int32 _EmotionHappy;
        partial void OnEmotionHappyChanging(global::System.Int32 value);
        partial void OnEmotionHappyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmotionAccept
        {
            get
            {
                return _EmotionAccept;
            }
            set
            {
                OnEmotionAcceptChanging(value);
                ReportPropertyChanging("EmotionAccept");
                _EmotionAccept = StructuralObject.SetValidValue(value, "EmotionAccept");
                ReportPropertyChanged("EmotionAccept");
                OnEmotionAcceptChanged();
            }
        }
        private global::System.Int32 _EmotionAccept;
        partial void OnEmotionAcceptChanging(global::System.Int32 value);
        partial void OnEmotionAcceptChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmotionSurprise
        {
            get
            {
                return _EmotionSurprise;
            }
            set
            {
                OnEmotionSurpriseChanging(value);
                ReportPropertyChanging("EmotionSurprise");
                _EmotionSurprise = StructuralObject.SetValidValue(value, "EmotionSurprise");
                ReportPropertyChanged("EmotionSurprise");
                OnEmotionSurpriseChanged();
            }
        }
        private global::System.Int32 _EmotionSurprise;
        partial void OnEmotionSurpriseChanging(global::System.Int32 value);
        partial void OnEmotionSurpriseChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmotionFear
        {
            get
            {
                return _EmotionFear;
            }
            set
            {
                OnEmotionFearChanging(value);
                ReportPropertyChanging("EmotionFear");
                _EmotionFear = StructuralObject.SetValidValue(value, "EmotionFear");
                ReportPropertyChanged("EmotionFear");
                OnEmotionFearChanged();
            }
        }
        private global::System.Int32 _EmotionFear;
        partial void OnEmotionFearChanging(global::System.Int32 value);
        partial void OnEmotionFearChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmotionSad
        {
            get
            {
                return _EmotionSad;
            }
            set
            {
                OnEmotionSadChanging(value);
                ReportPropertyChanging("EmotionSad");
                _EmotionSad = StructuralObject.SetValidValue(value, "EmotionSad");
                ReportPropertyChanged("EmotionSad");
                OnEmotionSadChanged();
            }
        }
        private global::System.Int32 _EmotionSad;
        partial void OnEmotionSadChanging(global::System.Int32 value);
        partial void OnEmotionSadChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmotionHate
        {
            get
            {
                return _EmotionHate;
            }
            set
            {
                OnEmotionHateChanging(value);
                ReportPropertyChanging("EmotionHate");
                _EmotionHate = StructuralObject.SetValidValue(value, "EmotionHate");
                ReportPropertyChanged("EmotionHate");
                OnEmotionHateChanged();
            }
        }
        private global::System.Int32 _EmotionHate;
        partial void OnEmotionHateChanging(global::System.Int32 value);
        partial void OnEmotionHateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmotionExpect
        {
            get
            {
                return _EmotionExpect;
            }
            set
            {
                OnEmotionExpectChanging(value);
                ReportPropertyChanging("EmotionExpect");
                _EmotionExpect = StructuralObject.SetValidValue(value, "EmotionExpect");
                ReportPropertyChanged("EmotionExpect");
                OnEmotionExpectChanged();
            }
        }
        private global::System.Int32 _EmotionExpect;
        partial void OnEmotionExpectChanging(global::System.Int32 value);
        partial void OnEmotionExpectChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmotionAngry
        {
            get
            {
                return _EmotionAngry;
            }
            set
            {
                OnEmotionAngryChanging(value);
                ReportPropertyChanging("EmotionAngry");
                _EmotionAngry = StructuralObject.SetValidValue(value, "EmotionAngry");
                ReportPropertyChanged("EmotionAngry");
                OnEmotionAngryChanged();
            }
        }
        private global::System.Int32 _EmotionAngry;
        partial void OnEmotionAngryChanging(global::System.Int32 value);
        partial void OnEmotionAngryChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sentiment
        {
            get
            {
                return _Sentiment;
            }
            set
            {
                OnSentimentChanging(value);
                ReportPropertyChanging("Sentiment");
                _Sentiment = StructuralObject.SetValidValue(value, "Sentiment");
                ReportPropertyChanged("Sentiment");
                OnSentimentChanged();
            }
        }
        private global::System.Int32 _Sentiment;
        partial void OnSentimentChanging(global::System.Int32 value);
        partial void OnSentimentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KnowledgePositive
        {
            get
            {
                return _KnowledgePositive;
            }
            set
            {
                OnKnowledgePositiveChanging(value);
                ReportPropertyChanging("KnowledgePositive");
                _KnowledgePositive = StructuralObject.SetValidValue(value, "KnowledgePositive");
                ReportPropertyChanged("KnowledgePositive");
                OnKnowledgePositiveChanged();
            }
        }
        private global::System.Int32 _KnowledgePositive;
        partial void OnKnowledgePositiveChanging(global::System.Int32 value);
        partial void OnKnowledgePositiveChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KnowledgeNegative
        {
            get
            {
                return _KnowledgeNegative;
            }
            set
            {
                OnKnowledgeNegativeChanging(value);
                ReportPropertyChanging("KnowledgeNegative");
                _KnowledgeNegative = StructuralObject.SetValidValue(value, "KnowledgeNegative");
                ReportPropertyChanged("KnowledgeNegative");
                OnKnowledgeNegativeChanged();
            }
        }
        private global::System.Int32 _KnowledgeNegative;
        partial void OnKnowledgeNegativeChanging(global::System.Int32 value);
        partial void OnKnowledgeNegativeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActionPositive
        {
            get
            {
                return _ActionPositive;
            }
            set
            {
                OnActionPositiveChanging(value);
                ReportPropertyChanging("ActionPositive");
                _ActionPositive = StructuralObject.SetValidValue(value, "ActionPositive");
                ReportPropertyChanged("ActionPositive");
                OnActionPositiveChanged();
            }
        }
        private global::System.Int32 _ActionPositive;
        partial void OnActionPositiveChanging(global::System.Int32 value);
        partial void OnActionPositiveChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActionNegative
        {
            get
            {
                return _ActionNegative;
            }
            set
            {
                OnActionNegativeChanging(value);
                ReportPropertyChanging("ActionNegative");
                _ActionNegative = StructuralObject.SetValidValue(value, "ActionNegative");
                ReportPropertyChanged("ActionNegative");
                OnActionNegativeChanged();
            }
        }
        private global::System.Int32 _ActionNegative;
        partial void OnActionNegativeChanging(global::System.Int32 value);
        partial void OnActionNegativeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value, "CreateTime");
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, true, "Author");
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuthorRelated
        {
            get
            {
                return _AuthorRelated;
            }
            set
            {
                OnAuthorRelatedChanging(value);
                ReportPropertyChanging("AuthorRelated");
                _AuthorRelated = StructuralObject.SetValidValue(value, true, "AuthorRelated");
                ReportPropertyChanged("AuthorRelated");
                OnAuthorRelatedChanged();
            }
        }
        private global::System.String _AuthorRelated;
        partial void OnAuthorRelatedChanging(global::System.String value);
        partial void OnAuthorRelatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LanguageType
        {
            get
            {
                return _LanguageType;
            }
            set
            {
                OnLanguageTypeChanging(value);
                ReportPropertyChanging("LanguageType");
                _LanguageType = StructuralObject.SetValidValue(value, true, "LanguageType");
                ReportPropertyChanged("LanguageType");
                OnLanguageTypeChanged();
            }
        }
        private global::System.String _LanguageType;
        partial void OnLanguageTypeChanging(global::System.String value);
        partial void OnLanguageTypeChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "FK_ArticleAnalyze", "LanguageMaterial")]
        public LanguageMaterial LanguageMaterial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageMaterial>("MaterialModel.FK_ArticleAnalyze", "LanguageMaterial").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageMaterial>("MaterialModel.FK_ArticleAnalyze", "LanguageMaterial").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageMaterial> LanguageMaterialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageMaterial>("MaterialModel.FK_ArticleAnalyze", "LanguageMaterial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageMaterial>("MaterialModel.FK_ArticleAnalyze", "LanguageMaterial", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "FK_ArticleAnalyze_UserID", "UserInfo")]
        public UserInfo UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("MaterialModel.FK_ArticleAnalyze_UserID", "UserInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("MaterialModel.FK_ArticleAnalyze_UserID", "UserInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfo> UserInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("MaterialModel.FK_ArticleAnalyze_UserID", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInfo>("MaterialModel.FK_ArticleAnalyze_UserID", "UserInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "ArticleAnalyzeCategory", "Category")]
        public EntityCollection<Category> Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("MaterialModel.ArticleAnalyzeCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("MaterialModel.ArticleAnalyzeCategory", "Category", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MaterialModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Category 对象。
        /// </summary>
        /// <param name="categoryID">CategoryID 属性的初始值。</param>
        /// <param name="title">Title 属性的初始值。</param>
        /// <param name="categoryType">CategoryType 属性的初始值。</param>
        public static Category CreateCategory(global::System.String categoryID, global::System.String title, global::System.Int32 categoryType)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            category.Title = title;
            category.CategoryType = categoryType;
            return category;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value, false, "CategoryID");
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.String _CategoryID;
        partial void OnCategoryIDChanging(global::System.String value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryType
        {
            get
            {
                return _CategoryType;
            }
            set
            {
                OnCategoryTypeChanging(value);
                ReportPropertyChanging("CategoryType");
                _CategoryType = StructuralObject.SetValidValue(value, "CategoryType");
                ReportPropertyChanged("CategoryType");
                OnCategoryTypeChanged();
            }
        }
        private global::System.Int32 _CategoryType;
        partial void OnCategoryTypeChanging(global::System.Int32 value);
        partial void OnCategoryTypeChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "ArticleAnalyzeCategory", "ArticleAnalyze")]
        public EntityCollection<ArticleAnalyze> ArticleAnalyze
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArticleAnalyze>("MaterialModel.ArticleAnalyzeCategory", "ArticleAnalyze");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArticleAnalyze>("MaterialModel.ArticleAnalyzeCategory", "ArticleAnalyze", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MaterialModel", Name="LanguageMaterial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LanguageMaterial : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 LanguageMaterial 对象。
        /// </summary>
        /// <param name="articleID">ArticleID 属性的初始值。</param>
        /// <param name="title">Title 属性的初始值。</param>
        /// <param name="articleType">ArticleType 属性的初始值。</param>
        public static LanguageMaterial CreateLanguageMaterial(global::System.String articleID, global::System.String title, global::System.Int32 articleType)
        {
            LanguageMaterial languageMaterial = new LanguageMaterial();
            languageMaterial.ArticleID = articleID;
            languageMaterial.Title = title;
            languageMaterial.ArticleType = articleType;
            return languageMaterial;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ArticleID
        {
            get
            {
                return _ArticleID;
            }
            set
            {
                if (_ArticleID != value)
                {
                    OnArticleIDChanging(value);
                    ReportPropertyChanging("ArticleID");
                    _ArticleID = StructuralObject.SetValidValue(value, false, "ArticleID");
                    ReportPropertyChanged("ArticleID");
                    OnArticleIDChanged();
                }
            }
        }
        private global::System.String _ArticleID;
        partial void OnArticleIDChanging(global::System.String value);
        partial void OnArticleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true, "Content");
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArticleType
        {
            get
            {
                return _ArticleType;
            }
            set
            {
                OnArticleTypeChanging(value);
                ReportPropertyChanging("ArticleType");
                _ArticleType = StructuralObject.SetValidValue(value, "ArticleType");
                ReportPropertyChanged("ArticleType");
                OnArticleTypeChanged();
            }
        }
        private global::System.Int32 _ArticleType;
        partial void OnArticleTypeChanging(global::System.Int32 value);
        partial void OnArticleTypeChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "FK_ArticleAnalyze", "ArticleAnalyze")]
        public EntityCollection<ArticleAnalyze> ArticleAnalyze
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArticleAnalyze>("MaterialModel.FK_ArticleAnalyze", "ArticleAnalyze");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArticleAnalyze>("MaterialModel.FK_ArticleAnalyze", "ArticleAnalyze", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "FK_UserTask_ArticleID", "UserTask")]
        public EntityCollection<UserTask> UserTask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserTask>("MaterialModel.FK_UserTask_ArticleID", "UserTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserTask>("MaterialModel.FK_UserTask_ArticleID", "UserTask", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MaterialModel", Name="Stat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stat : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Stat 对象。
        /// </summary>
        /// <param name="statID">StatID 属性的初始值。</param>
        /// <param name="createTime">CreateTime 属性的初始值。</param>
        /// <param name="fileID">FileID 属性的初始值。</param>
        /// <param name="samplingNum">SamplingNum 属性的初始值。</param>
        /// <param name="passNum">PassNum 属性的初始值。</param>
        /// <param name="failureNum">FailureNum 属性的初始值。</param>
        /// <param name="isPass">IsPass 属性的初始值。</param>
        /// <param name="submitNum">SubmitNum 属性的初始值。</param>
        public static Stat CreateStat(global::System.String statID, global::System.DateTime createTime, global::System.String fileID, global::System.Int32 samplingNum, global::System.Int32 passNum, global::System.Int32 failureNum, global::System.Boolean isPass, global::System.Int32 submitNum)
        {
            Stat stat = new Stat();
            stat.StatID = statID;
            stat.CreateTime = createTime;
            stat.FileID = fileID;
            stat.SamplingNum = samplingNum;
            stat.PassNum = passNum;
            stat.FailureNum = failureNum;
            stat.IsPass = isPass;
            stat.SubmitNum = submitNum;
            return stat;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatID
        {
            get
            {
                return _StatID;
            }
            set
            {
                if (_StatID != value)
                {
                    OnStatIDChanging(value);
                    ReportPropertyChanging("StatID");
                    _StatID = StructuralObject.SetValidValue(value, false, "StatID");
                    ReportPropertyChanged("StatID");
                    OnStatIDChanged();
                }
            }
        }
        private global::System.String _StatID;
        partial void OnStatIDChanging(global::System.String value);
        partial void OnStatIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value, "CreateTime");
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value, false, "FileID");
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private global::System.String _FileID;
        partial void OnFileIDChanging(global::System.String value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true, "Remark");
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SamplingNum
        {
            get
            {
                return _SamplingNum;
            }
            set
            {
                OnSamplingNumChanging(value);
                ReportPropertyChanging("SamplingNum");
                _SamplingNum = StructuralObject.SetValidValue(value, "SamplingNum");
                ReportPropertyChanged("SamplingNum");
                OnSamplingNumChanged();
            }
        }
        private global::System.Int32 _SamplingNum;
        partial void OnSamplingNumChanging(global::System.Int32 value);
        partial void OnSamplingNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PassNum
        {
            get
            {
                return _PassNum;
            }
            set
            {
                OnPassNumChanging(value);
                ReportPropertyChanging("PassNum");
                _PassNum = StructuralObject.SetValidValue(value, "PassNum");
                ReportPropertyChanged("PassNum");
                OnPassNumChanged();
            }
        }
        private global::System.Int32 _PassNum;
        partial void OnPassNumChanging(global::System.Int32 value);
        partial void OnPassNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailureNum
        {
            get
            {
                return _FailureNum;
            }
            set
            {
                OnFailureNumChanging(value);
                ReportPropertyChanging("FailureNum");
                _FailureNum = StructuralObject.SetValidValue(value, "FailureNum");
                ReportPropertyChanged("FailureNum");
                OnFailureNumChanged();
            }
        }
        private global::System.Int32 _FailureNum;
        partial void OnFailureNumChanging(global::System.Int32 value);
        partial void OnFailureNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPass
        {
            get
            {
                return _IsPass;
            }
            set
            {
                OnIsPassChanging(value);
                ReportPropertyChanging("IsPass");
                _IsPass = StructuralObject.SetValidValue(value, "IsPass");
                ReportPropertyChanged("IsPass");
                OnIsPassChanged();
            }
        }
        private global::System.Boolean _IsPass;
        partial void OnIsPassChanging(global::System.Boolean value);
        partial void OnIsPassChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubmitNum
        {
            get
            {
                return _SubmitNum;
            }
            set
            {
                OnSubmitNumChanging(value);
                ReportPropertyChanging("SubmitNum");
                _SubmitNum = StructuralObject.SetValidValue(value, "SubmitNum");
                ReportPropertyChanged("SubmitNum");
                OnSubmitNumChanged();
            }
        }
        private global::System.Int32 _SubmitNum;
        partial void OnSubmitNumChanging(global::System.Int32 value);
        partial void OnSubmitNumChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "FK_stat_fileid", "UserFile")]
        public UserFile UserFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserFile>("MaterialModel.FK_stat_fileid", "UserFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserFile>("MaterialModel.FK_stat_fileid", "UserFile").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserFile> UserFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserFile>("MaterialModel.FK_stat_fileid", "UserFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserFile>("MaterialModel.FK_stat_fileid", "UserFile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MaterialModel", Name="UserFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserFile : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserFile 对象。
        /// </summary>
        /// <param name="fileID">FileID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="fileName">FileName 属性的初始值。</param>
        /// <param name="createTime">CreateTime 属性的初始值。</param>
        /// <param name="updateTime">UpdateTime 属性的初始值。</param>
        /// <param name="rowNumber">RowNumber 属性的初始值。</param>
        /// <param name="updateNum">UpdateNum 属性的初始值。</param>
        public static UserFile CreateUserFile(global::System.String fileID, global::System.String userID, global::System.String fileName, global::System.DateTime createTime, global::System.DateTime updateTime, global::System.Int32 rowNumber, global::System.Int32 updateNum)
        {
            UserFile userFile = new UserFile();
            userFile.FileID = fileID;
            userFile.UserID = userID;
            userFile.FileName = fileName;
            userFile.CreateTime = createTime;
            userFile.UpdateTime = updateTime;
            userFile.RowNumber = rowNumber;
            userFile.UpdateNum = updateNum;
            return userFile;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                if (_FileID != value)
                {
                    OnFileIDChanging(value);
                    ReportPropertyChanging("FileID");
                    _FileID = StructuralObject.SetValidValue(value, false, "FileID");
                    ReportPropertyChanged("FileID");
                    OnFileIDChanged();
                }
            }
        }
        private global::System.String _FileID;
        partial void OnFileIDChanging(global::System.String value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, false, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false, "FileName");
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value, "CreateTime");
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                OnUpdateTimeChanging(value);
                ReportPropertyChanging("UpdateTime");
                _UpdateTime = StructuralObject.SetValidValue(value, "UpdateTime");
                ReportPropertyChanged("UpdateTime");
                OnUpdateTimeChanged();
            }
        }
        private global::System.DateTime _UpdateTime;
        partial void OnUpdateTimeChanging(global::System.DateTime value);
        partial void OnUpdateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RowNumber
        {
            get
            {
                return _RowNumber;
            }
            set
            {
                OnRowNumberChanging(value);
                ReportPropertyChanging("RowNumber");
                _RowNumber = StructuralObject.SetValidValue(value, "RowNumber");
                ReportPropertyChanged("RowNumber");
                OnRowNumberChanged();
            }
        }
        private global::System.Int32 _RowNumber;
        partial void OnRowNumberChanging(global::System.Int32 value);
        partial void OnRowNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdateNum
        {
            get
            {
                return _UpdateNum;
            }
            set
            {
                OnUpdateNumChanging(value);
                ReportPropertyChanging("UpdateNum");
                _UpdateNum = StructuralObject.SetValidValue(value, "UpdateNum");
                ReportPropertyChanged("UpdateNum");
                OnUpdateNumChanged();
            }
        }
        private global::System.Int32 _UpdateNum;
        partial void OnUpdateNumChanging(global::System.Int32 value);
        partial void OnUpdateNumChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "FK_stat_fileid", "Stat")]
        public EntityCollection<Stat> Stat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stat>("MaterialModel.FK_stat_fileid", "Stat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stat>("MaterialModel.FK_stat_fileid", "Stat", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "FK_UserInfo_UserID", "UserInfo")]
        public UserInfo UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("MaterialModel.FK_UserInfo_UserID", "UserInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("MaterialModel.FK_UserInfo_UserID", "UserInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfo> UserInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("MaterialModel.FK_UserInfo_UserID", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInfo>("MaterialModel.FK_UserInfo_UserID", "UserInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MaterialModel", Name="UserInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserInfo 对象。
        /// </summary>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="username">Username 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        /// <param name="realName">RealName 属性的初始值。</param>
        /// <param name="taskType">TaskType 属性的初始值。</param>
        /// <param name="createTime">CreateTime 属性的初始值。</param>
        /// <param name="email">Email 属性的初始值。</param>
        public static UserInfo CreateUserInfo(global::System.String userID, global::System.String username, global::System.String password, global::System.String realName, global::System.Int32 taskType, global::System.DateTime createTime, global::System.String email)
        {
            UserInfo userInfo = new UserInfo();
            userInfo.UserID = userID;
            userInfo.Username = username;
            userInfo.Password = password;
            userInfo.RealName = realName;
            userInfo.TaskType = taskType;
            userInfo.CreateTime = createTime;
            userInfo.Email = email;
            return userInfo;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false, "UserID");
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RealName
        {
            get
            {
                return _RealName;
            }
            set
            {
                OnRealNameChanging(value);
                ReportPropertyChanging("RealName");
                _RealName = StructuralObject.SetValidValue(value, false, "RealName");
                ReportPropertyChanged("RealName");
                OnRealNameChanged();
            }
        }
        private global::System.String _RealName;
        partial void OnRealNameChanging(global::System.String value);
        partial void OnRealNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CellPhone
        {
            get
            {
                return _CellPhone;
            }
            set
            {
                OnCellPhoneChanging(value);
                ReportPropertyChanging("CellPhone");
                _CellPhone = StructuralObject.SetValidValue(value, true, "CellPhone");
                ReportPropertyChanged("CellPhone");
                OnCellPhoneChanged();
            }
        }
        private global::System.String _CellPhone;
        partial void OnCellPhoneChanging(global::System.String value);
        partial void OnCellPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskType
        {
            get
            {
                return _TaskType;
            }
            set
            {
                OnTaskTypeChanging(value);
                ReportPropertyChanging("TaskType");
                _TaskType = StructuralObject.SetValidValue(value, "TaskType");
                ReportPropertyChanged("TaskType");
                OnTaskTypeChanged();
            }
        }
        private global::System.Int32 _TaskType;
        partial void OnTaskTypeChanging(global::System.Int32 value);
        partial void OnTaskTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value, "CreateTime");
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "FK_ArticleAnalyze_UserID", "ArticleAnalyze")]
        public EntityCollection<ArticleAnalyze> ArticleAnalyze
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArticleAnalyze>("MaterialModel.FK_ArticleAnalyze_UserID", "ArticleAnalyze");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArticleAnalyze>("MaterialModel.FK_ArticleAnalyze_UserID", "ArticleAnalyze", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "FK_UserInfo_UserID", "UserFile")]
        public EntityCollection<UserFile> UserFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserFile>("MaterialModel.FK_UserInfo_UserID", "UserFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserFile>("MaterialModel.FK_UserInfo_UserID", "UserFile", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "FK_UserTask", "UserTask")]
        public EntityCollection<UserTask> UserTask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserTask>("MaterialModel.FK_UserTask", "UserTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserTask>("MaterialModel.FK_UserTask", "UserTask", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MaterialModel", Name="UserTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserTask : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserTask 对象。
        /// </summary>
        /// <param name="articleID">ArticleID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="createTime">CreateTime 属性的初始值。</param>
        /// <param name="isIgnore">IsIgnore 属性的初始值。</param>
        public static UserTask CreateUserTask(global::System.String articleID, global::System.String userID, global::System.DateTime createTime, global::System.Boolean isIgnore)
        {
            UserTask userTask = new UserTask();
            userTask.ArticleID = articleID;
            userTask.UserID = userID;
            userTask.CreateTime = createTime;
            userTask.IsIgnore = isIgnore;
            return userTask;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ArticleID
        {
            get
            {
                return _ArticleID;
            }
            set
            {
                if (_ArticleID != value)
                {
                    OnArticleIDChanging(value);
                    ReportPropertyChanging("ArticleID");
                    _ArticleID = StructuralObject.SetValidValue(value, false, "ArticleID");
                    ReportPropertyChanged("ArticleID");
                    OnArticleIDChanged();
                }
            }
        }
        private global::System.String _ArticleID;
        partial void OnArticleIDChanging(global::System.String value);
        partial void OnArticleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false, "UserID");
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value, "CreateTime");
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIgnore
        {
            get
            {
                return _IsIgnore;
            }
            set
            {
                OnIsIgnoreChanging(value);
                ReportPropertyChanging("IsIgnore");
                _IsIgnore = StructuralObject.SetValidValue(value, "IsIgnore");
                ReportPropertyChanged("IsIgnore");
                OnIsIgnoreChanged();
            }
        }
        private global::System.Boolean _IsIgnore;
        partial void OnIsIgnoreChanging(global::System.Boolean value);
        partial void OnIsIgnoreChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "FK_UserTask_ArticleID", "LanguageMaterial")]
        public LanguageMaterial LanguageMaterial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageMaterial>("MaterialModel.FK_UserTask_ArticleID", "LanguageMaterial").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageMaterial>("MaterialModel.FK_UserTask_ArticleID", "LanguageMaterial").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageMaterial> LanguageMaterialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageMaterial>("MaterialModel.FK_UserTask_ArticleID", "LanguageMaterial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageMaterial>("MaterialModel.FK_UserTask_ArticleID", "LanguageMaterial", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MaterialModel", "FK_UserTask", "UserInfo")]
        public UserInfo UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("MaterialModel.FK_UserTask", "UserInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("MaterialModel.FK_UserTask", "UserInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfo> UserInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("MaterialModel.FK_UserTask", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInfo>("MaterialModel.FK_UserTask", "UserInfo", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
